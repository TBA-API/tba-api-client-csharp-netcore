/* 
 * The Blue Alliance API v3
 *
 * # Overview    Information and statistics about FIRST Robotics Competition teams and events.   # Authentication   All endpoints require an Auth Key to be passed in the header `X-TBA-Auth-Key`. If you do not have an auth key yet, you can obtain one from your [Account Page](/account).    A `User-Agent` header may need to be set to prevent a 403 Unauthorized error.
 *
 * The version of the OpenAPI document: 3.8.0
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using TBAAPI.V3Client.Api;
using TBAAPI.V3Client.Model;
using TBAAPI.V3Client.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace TBAAPI.V3Client.Test
{
    /// <summary>
    ///  Class for testing MatchScoreBreakdown2018Alliance
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class MatchScoreBreakdown2018AllianceTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for MatchScoreBreakdown2018Alliance
        //private MatchScoreBreakdown2018Alliance instance;

        public MatchScoreBreakdown2018AllianceTests()
        {
            // TODO uncomment below to create an instance of MatchScoreBreakdown2018Alliance
            //instance = new MatchScoreBreakdown2018Alliance();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of MatchScoreBreakdown2018Alliance
        /// </summary>
        [Fact]
        public void MatchScoreBreakdown2018AllianceInstanceTest()
        {
            // TODO uncomment below to test "IsInstanceOfType" MatchScoreBreakdown2018Alliance
            //Assert.IsInstanceOfType<MatchScoreBreakdown2018Alliance> (instance, "variable 'instance' is a MatchScoreBreakdown2018Alliance");
        }


        /// <summary>
        /// Test the property 'AdjustPoints'
        /// </summary>
        [Fact]
        public void AdjustPointsTest()
        {
            // TODO unit test for the property 'AdjustPoints'
        }
        /// <summary>
        /// Test the property 'AutoOwnershipPoints'
        /// </summary>
        [Fact]
        public void AutoOwnershipPointsTest()
        {
            // TODO unit test for the property 'AutoOwnershipPoints'
        }
        /// <summary>
        /// Test the property 'AutoPoints'
        /// </summary>
        [Fact]
        public void AutoPointsTest()
        {
            // TODO unit test for the property 'AutoPoints'
        }
        /// <summary>
        /// Test the property 'AutoQuestRankingPoint'
        /// </summary>
        [Fact]
        public void AutoQuestRankingPointTest()
        {
            // TODO unit test for the property 'AutoQuestRankingPoint'
        }
        /// <summary>
        /// Test the property 'AutoRobot1'
        /// </summary>
        [Fact]
        public void AutoRobot1Test()
        {
            // TODO unit test for the property 'AutoRobot1'
        }
        /// <summary>
        /// Test the property 'AutoRobot2'
        /// </summary>
        [Fact]
        public void AutoRobot2Test()
        {
            // TODO unit test for the property 'AutoRobot2'
        }
        /// <summary>
        /// Test the property 'AutoRobot3'
        /// </summary>
        [Fact]
        public void AutoRobot3Test()
        {
            // TODO unit test for the property 'AutoRobot3'
        }
        /// <summary>
        /// Test the property 'AutoRunPoints'
        /// </summary>
        [Fact]
        public void AutoRunPointsTest()
        {
            // TODO unit test for the property 'AutoRunPoints'
        }
        /// <summary>
        /// Test the property 'AutoScaleOwnershipSec'
        /// </summary>
        [Fact]
        public void AutoScaleOwnershipSecTest()
        {
            // TODO unit test for the property 'AutoScaleOwnershipSec'
        }
        /// <summary>
        /// Test the property 'AutoSwitchAtZero'
        /// </summary>
        [Fact]
        public void AutoSwitchAtZeroTest()
        {
            // TODO unit test for the property 'AutoSwitchAtZero'
        }
        /// <summary>
        /// Test the property 'AutoSwitchOwnershipSec'
        /// </summary>
        [Fact]
        public void AutoSwitchOwnershipSecTest()
        {
            // TODO unit test for the property 'AutoSwitchOwnershipSec'
        }
        /// <summary>
        /// Test the property 'EndgamePoints'
        /// </summary>
        [Fact]
        public void EndgamePointsTest()
        {
            // TODO unit test for the property 'EndgamePoints'
        }
        /// <summary>
        /// Test the property 'EndgameRobot1'
        /// </summary>
        [Fact]
        public void EndgameRobot1Test()
        {
            // TODO unit test for the property 'EndgameRobot1'
        }
        /// <summary>
        /// Test the property 'EndgameRobot2'
        /// </summary>
        [Fact]
        public void EndgameRobot2Test()
        {
            // TODO unit test for the property 'EndgameRobot2'
        }
        /// <summary>
        /// Test the property 'EndgameRobot3'
        /// </summary>
        [Fact]
        public void EndgameRobot3Test()
        {
            // TODO unit test for the property 'EndgameRobot3'
        }
        /// <summary>
        /// Test the property 'FaceTheBossRankingPoint'
        /// </summary>
        [Fact]
        public void FaceTheBossRankingPointTest()
        {
            // TODO unit test for the property 'FaceTheBossRankingPoint'
        }
        /// <summary>
        /// Test the property 'FoulCount'
        /// </summary>
        [Fact]
        public void FoulCountTest()
        {
            // TODO unit test for the property 'FoulCount'
        }
        /// <summary>
        /// Test the property 'FoulPoints'
        /// </summary>
        [Fact]
        public void FoulPointsTest()
        {
            // TODO unit test for the property 'FoulPoints'
        }
        /// <summary>
        /// Test the property 'Rp'
        /// </summary>
        [Fact]
        public void RpTest()
        {
            // TODO unit test for the property 'Rp'
        }
        /// <summary>
        /// Test the property 'TechFoulCount'
        /// </summary>
        [Fact]
        public void TechFoulCountTest()
        {
            // TODO unit test for the property 'TechFoulCount'
        }
        /// <summary>
        /// Test the property 'TeleopOwnershipPoints'
        /// </summary>
        [Fact]
        public void TeleopOwnershipPointsTest()
        {
            // TODO unit test for the property 'TeleopOwnershipPoints'
        }
        /// <summary>
        /// Test the property 'TeleopPoints'
        /// </summary>
        [Fact]
        public void TeleopPointsTest()
        {
            // TODO unit test for the property 'TeleopPoints'
        }
        /// <summary>
        /// Test the property 'TeleopScaleBoostSec'
        /// </summary>
        [Fact]
        public void TeleopScaleBoostSecTest()
        {
            // TODO unit test for the property 'TeleopScaleBoostSec'
        }
        /// <summary>
        /// Test the property 'TeleopScaleForceSec'
        /// </summary>
        [Fact]
        public void TeleopScaleForceSecTest()
        {
            // TODO unit test for the property 'TeleopScaleForceSec'
        }
        /// <summary>
        /// Test the property 'TeleopScaleOwnershipSec'
        /// </summary>
        [Fact]
        public void TeleopScaleOwnershipSecTest()
        {
            // TODO unit test for the property 'TeleopScaleOwnershipSec'
        }
        /// <summary>
        /// Test the property 'TeleopSwitchBoostSec'
        /// </summary>
        [Fact]
        public void TeleopSwitchBoostSecTest()
        {
            // TODO unit test for the property 'TeleopSwitchBoostSec'
        }
        /// <summary>
        /// Test the property 'TeleopSwitchForceSec'
        /// </summary>
        [Fact]
        public void TeleopSwitchForceSecTest()
        {
            // TODO unit test for the property 'TeleopSwitchForceSec'
        }
        /// <summary>
        /// Test the property 'TeleopSwitchOwnershipSec'
        /// </summary>
        [Fact]
        public void TeleopSwitchOwnershipSecTest()
        {
            // TODO unit test for the property 'TeleopSwitchOwnershipSec'
        }
        /// <summary>
        /// Test the property 'TotalPoints'
        /// </summary>
        [Fact]
        public void TotalPointsTest()
        {
            // TODO unit test for the property 'TotalPoints'
        }
        /// <summary>
        /// Test the property 'VaultBoostPlayed'
        /// </summary>
        [Fact]
        public void VaultBoostPlayedTest()
        {
            // TODO unit test for the property 'VaultBoostPlayed'
        }
        /// <summary>
        /// Test the property 'VaultBoostTotal'
        /// </summary>
        [Fact]
        public void VaultBoostTotalTest()
        {
            // TODO unit test for the property 'VaultBoostTotal'
        }
        /// <summary>
        /// Test the property 'VaultForcePlayed'
        /// </summary>
        [Fact]
        public void VaultForcePlayedTest()
        {
            // TODO unit test for the property 'VaultForcePlayed'
        }
        /// <summary>
        /// Test the property 'VaultForceTotal'
        /// </summary>
        [Fact]
        public void VaultForceTotalTest()
        {
            // TODO unit test for the property 'VaultForceTotal'
        }
        /// <summary>
        /// Test the property 'VaultLevitatePlayed'
        /// </summary>
        [Fact]
        public void VaultLevitatePlayedTest()
        {
            // TODO unit test for the property 'VaultLevitatePlayed'
        }
        /// <summary>
        /// Test the property 'VaultLevitateTotal'
        /// </summary>
        [Fact]
        public void VaultLevitateTotalTest()
        {
            // TODO unit test for the property 'VaultLevitateTotal'
        }
        /// <summary>
        /// Test the property 'VaultPoints'
        /// </summary>
        [Fact]
        public void VaultPointsTest()
        {
            // TODO unit test for the property 'VaultPoints'
        }
        /// <summary>
        /// Test the property 'TbaGameData'
        /// </summary>
        [Fact]
        public void TbaGameDataTest()
        {
            // TODO unit test for the property 'TbaGameData'
        }

    }

}
