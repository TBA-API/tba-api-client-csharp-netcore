/* 
 * The Blue Alliance API v3
 *
 * # Overview    Information and statistics about FIRST Robotics Competition teams and events.   # Authentication   All endpoints require an Auth Key to be passed in the header `X-TBA-Auth-Key`. If you do not have an auth key yet, you can obtain one from your [Account Page](/account).    A `User-Agent` header may need to be set to prevent a 403 Unauthorized error.
 *
 * The version of the OpenAPI document: 3.8.0
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using TBAAPI.V3Client.Api;
using TBAAPI.V3Client.Model;
using TBAAPI.V3Client.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace TBAAPI.V3Client.Test
{
    /// <summary>
    ///  Class for testing EventInsights2017
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class EventInsights2017Tests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for EventInsights2017
        //private EventInsights2017 instance;

        public EventInsights2017Tests()
        {
            // TODO uncomment below to create an instance of EventInsights2017
            //instance = new EventInsights2017();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of EventInsights2017
        /// </summary>
        [Fact]
        public void EventInsights2017InstanceTest()
        {
            // TODO uncomment below to test "IsInstanceOfType" EventInsights2017
            //Assert.IsInstanceOfType<EventInsights2017> (instance, "variable 'instance' is a EventInsights2017");
        }


        /// <summary>
        /// Test the property 'AverageFoulScore'
        /// </summary>
        [Fact]
        public void AverageFoulScoreTest()
        {
            // TODO unit test for the property 'AverageFoulScore'
        }
        /// <summary>
        /// Test the property 'AverageFuelPoints'
        /// </summary>
        [Fact]
        public void AverageFuelPointsTest()
        {
            // TODO unit test for the property 'AverageFuelPoints'
        }
        /// <summary>
        /// Test the property 'AverageFuelPointsAuto'
        /// </summary>
        [Fact]
        public void AverageFuelPointsAutoTest()
        {
            // TODO unit test for the property 'AverageFuelPointsAuto'
        }
        /// <summary>
        /// Test the property 'AverageFuelPointsTeleop'
        /// </summary>
        [Fact]
        public void AverageFuelPointsTeleopTest()
        {
            // TODO unit test for the property 'AverageFuelPointsTeleop'
        }
        /// <summary>
        /// Test the property 'AverageHighGoals'
        /// </summary>
        [Fact]
        public void AverageHighGoalsTest()
        {
            // TODO unit test for the property 'AverageHighGoals'
        }
        /// <summary>
        /// Test the property 'AverageHighGoalsAuto'
        /// </summary>
        [Fact]
        public void AverageHighGoalsAutoTest()
        {
            // TODO unit test for the property 'AverageHighGoalsAuto'
        }
        /// <summary>
        /// Test the property 'AverageHighGoalsTeleop'
        /// </summary>
        [Fact]
        public void AverageHighGoalsTeleopTest()
        {
            // TODO unit test for the property 'AverageHighGoalsTeleop'
        }
        /// <summary>
        /// Test the property 'AverageLowGoals'
        /// </summary>
        [Fact]
        public void AverageLowGoalsTest()
        {
            // TODO unit test for the property 'AverageLowGoals'
        }
        /// <summary>
        /// Test the property 'AverageLowGoalsAuto'
        /// </summary>
        [Fact]
        public void AverageLowGoalsAutoTest()
        {
            // TODO unit test for the property 'AverageLowGoalsAuto'
        }
        /// <summary>
        /// Test the property 'AverageLowGoalsTeleop'
        /// </summary>
        [Fact]
        public void AverageLowGoalsTeleopTest()
        {
            // TODO unit test for the property 'AverageLowGoalsTeleop'
        }
        /// <summary>
        /// Test the property 'AverageMobilityPointsAuto'
        /// </summary>
        [Fact]
        public void AverageMobilityPointsAutoTest()
        {
            // TODO unit test for the property 'AverageMobilityPointsAuto'
        }
        /// <summary>
        /// Test the property 'AveragePointsAuto'
        /// </summary>
        [Fact]
        public void AveragePointsAutoTest()
        {
            // TODO unit test for the property 'AveragePointsAuto'
        }
        /// <summary>
        /// Test the property 'AveragePointsTeleop'
        /// </summary>
        [Fact]
        public void AveragePointsTeleopTest()
        {
            // TODO unit test for the property 'AveragePointsTeleop'
        }
        /// <summary>
        /// Test the property 'AverageRotorPoints'
        /// </summary>
        [Fact]
        public void AverageRotorPointsTest()
        {
            // TODO unit test for the property 'AverageRotorPoints'
        }
        /// <summary>
        /// Test the property 'AverageRotorPointsAuto'
        /// </summary>
        [Fact]
        public void AverageRotorPointsAutoTest()
        {
            // TODO unit test for the property 'AverageRotorPointsAuto'
        }
        /// <summary>
        /// Test the property 'AverageRotorPointsTeleop'
        /// </summary>
        [Fact]
        public void AverageRotorPointsTeleopTest()
        {
            // TODO unit test for the property 'AverageRotorPointsTeleop'
        }
        /// <summary>
        /// Test the property 'AverageScore'
        /// </summary>
        [Fact]
        public void AverageScoreTest()
        {
            // TODO unit test for the property 'AverageScore'
        }
        /// <summary>
        /// Test the property 'AverageTakeoffPointsTeleop'
        /// </summary>
        [Fact]
        public void AverageTakeoffPointsTeleopTest()
        {
            // TODO unit test for the property 'AverageTakeoffPointsTeleop'
        }
        /// <summary>
        /// Test the property 'AverageWinMargin'
        /// </summary>
        [Fact]
        public void AverageWinMarginTest()
        {
            // TODO unit test for the property 'AverageWinMargin'
        }
        /// <summary>
        /// Test the property 'AverageWinScore'
        /// </summary>
        [Fact]
        public void AverageWinScoreTest()
        {
            // TODO unit test for the property 'AverageWinScore'
        }
        /// <summary>
        /// Test the property 'HighKpa'
        /// </summary>
        [Fact]
        public void HighKpaTest()
        {
            // TODO unit test for the property 'HighKpa'
        }
        /// <summary>
        /// Test the property 'HighScore'
        /// </summary>
        [Fact]
        public void HighScoreTest()
        {
            // TODO unit test for the property 'HighScore'
        }
        /// <summary>
        /// Test the property 'KpaAchieved'
        /// </summary>
        [Fact]
        public void KpaAchievedTest()
        {
            // TODO unit test for the property 'KpaAchieved'
        }
        /// <summary>
        /// Test the property 'MobilityCounts'
        /// </summary>
        [Fact]
        public void MobilityCountsTest()
        {
            // TODO unit test for the property 'MobilityCounts'
        }
        /// <summary>
        /// Test the property 'Rotor1Engaged'
        /// </summary>
        [Fact]
        public void Rotor1EngagedTest()
        {
            // TODO unit test for the property 'Rotor1Engaged'
        }
        /// <summary>
        /// Test the property 'Rotor1EngagedAuto'
        /// </summary>
        [Fact]
        public void Rotor1EngagedAutoTest()
        {
            // TODO unit test for the property 'Rotor1EngagedAuto'
        }
        /// <summary>
        /// Test the property 'Rotor2Engaged'
        /// </summary>
        [Fact]
        public void Rotor2EngagedTest()
        {
            // TODO unit test for the property 'Rotor2Engaged'
        }
        /// <summary>
        /// Test the property 'Rotor2EngagedAuto'
        /// </summary>
        [Fact]
        public void Rotor2EngagedAutoTest()
        {
            // TODO unit test for the property 'Rotor2EngagedAuto'
        }
        /// <summary>
        /// Test the property 'Rotor3Engaged'
        /// </summary>
        [Fact]
        public void Rotor3EngagedTest()
        {
            // TODO unit test for the property 'Rotor3Engaged'
        }
        /// <summary>
        /// Test the property 'Rotor4Engaged'
        /// </summary>
        [Fact]
        public void Rotor4EngagedTest()
        {
            // TODO unit test for the property 'Rotor4Engaged'
        }
        /// <summary>
        /// Test the property 'TakeoffCounts'
        /// </summary>
        [Fact]
        public void TakeoffCountsTest()
        {
            // TODO unit test for the property 'TakeoffCounts'
        }
        /// <summary>
        /// Test the property 'UnicornMatches'
        /// </summary>
        [Fact]
        public void UnicornMatchesTest()
        {
            // TODO unit test for the property 'UnicornMatches'
        }

    }

}
