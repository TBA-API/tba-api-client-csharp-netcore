/* 
 * The Blue Alliance API v3
 *
 * # Overview    Information and statistics about FIRST Robotics Competition teams and events.   # Authentication   All endpoints require an Auth Key to be passed in the header `X-TBA-Auth-Key`. If you do not have an auth key yet, you can obtain one from your [Account Page](/account).    A `User-Agent` header may need to be set to prevent a 403 Unauthorized error.
 *
 * The version of the OpenAPI document: 3.8.0
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using TBAAPI.V3Client.Api;
using TBAAPI.V3Client.Model;
using TBAAPI.V3Client.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace TBAAPI.V3Client.Test
{
    /// <summary>
    ///  Class for testing Match
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class MatchTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for Match
        //private Match instance;

        public MatchTests()
        {
            // TODO uncomment below to create an instance of Match
            //instance = new Match();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of Match
        /// </summary>
        [Fact]
        public void MatchInstanceTest()
        {
            // TODO uncomment below to test "IsInstanceOfType" Match
            //Assert.IsInstanceOfType<Match> (instance, "variable 'instance' is a Match");
        }


        /// <summary>
        /// Test the property 'Key'
        /// </summary>
        [Fact]
        public void KeyTest()
        {
            // TODO unit test for the property 'Key'
        }
        /// <summary>
        /// Test the property 'CompLevel'
        /// </summary>
        [Fact]
        public void CompLevelTest()
        {
            // TODO unit test for the property 'CompLevel'
        }
        /// <summary>
        /// Test the property 'SetNumber'
        /// </summary>
        [Fact]
        public void SetNumberTest()
        {
            // TODO unit test for the property 'SetNumber'
        }
        /// <summary>
        /// Test the property 'MatchNumber'
        /// </summary>
        [Fact]
        public void MatchNumberTest()
        {
            // TODO unit test for the property 'MatchNumber'
        }
        /// <summary>
        /// Test the property 'Alliances'
        /// </summary>
        [Fact]
        public void AlliancesTest()
        {
            // TODO unit test for the property 'Alliances'
        }
        /// <summary>
        /// Test the property 'WinningAlliance'
        /// </summary>
        [Fact]
        public void WinningAllianceTest()
        {
            // TODO unit test for the property 'WinningAlliance'
        }
        /// <summary>
        /// Test the property 'EventKey'
        /// </summary>
        [Fact]
        public void EventKeyTest()
        {
            // TODO unit test for the property 'EventKey'
        }
        /// <summary>
        /// Test the property 'Time'
        /// </summary>
        [Fact]
        public void TimeTest()
        {
            // TODO unit test for the property 'Time'
        }
        /// <summary>
        /// Test the property 'ActualTime'
        /// </summary>
        [Fact]
        public void ActualTimeTest()
        {
            // TODO unit test for the property 'ActualTime'
        }
        /// <summary>
        /// Test the property 'PredictedTime'
        /// </summary>
        [Fact]
        public void PredictedTimeTest()
        {
            // TODO unit test for the property 'PredictedTime'
        }
        /// <summary>
        /// Test the property 'PostResultTime'
        /// </summary>
        [Fact]
        public void PostResultTimeTest()
        {
            // TODO unit test for the property 'PostResultTime'
        }
        /// <summary>
        /// Test the property 'ScoreBreakdown'
        /// </summary>
        [Fact]
        public void ScoreBreakdownTest()
        {
            // TODO unit test for the property 'ScoreBreakdown'
        }
        /// <summary>
        /// Test the property 'Videos'
        /// </summary>
        [Fact]
        public void VideosTest()
        {
            // TODO unit test for the property 'Videos'
        }

    }

}
